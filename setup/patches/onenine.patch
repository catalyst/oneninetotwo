diff --git a/admin/settings/courses.php b/admin/settings/courses.php
index 6a6c8a5..a82f062 100644
--- a/admin/settings/courses.php
+++ b/admin/settings/courses.php
@@ -65,15 +65,15 @@ if ($hassiteconfig
     // "backups" settingpage
     if (!empty($CFG->backup_version)) {
         $bi = array();
-        $bi[] = new admin_setting_configcheckbox('backup_sche_modules', get_string('includemodules'), get_string('backupincludemoduleshelp'), 0);
+        $bi[] = new admin_setting_configcheckbox('backup_sche_modules', get_string('includemodules'), get_string('backupincludemoduleshelp'), 1);
         $bi[] = new admin_setting_configcheckbox('backup_sche_withuserdata', get_string('includemoduleuserdata'), get_string('backupincludemoduleuserdatahelp'), 0);
         $bi[] = new admin_setting_configcheckbox('backup_sche_metacourse', get_string('metacourse'), get_string('backupmetacoursehelp'), 0);
         $bi[] = new admin_setting_configselect('backup_sche_users', get_string('users'), get_string('backupusershelp'),
                                                0, array(0 => get_string('all'), 1 => get_string('course')));
         $bi[] = new admin_setting_configcheckbox('backup_sche_logs', get_string('logs'), get_string('backuplogshelp'), 0);
         $bi[] = new admin_setting_configcheckbox('backup_sche_userfiles', get_string('userfiles'), get_string('backupuserfileshelp'), 0);
-        $bi[] = new admin_setting_configcheckbox('backup_sche_coursefiles', get_string('coursefiles'), get_string('backupcoursefileshelp'), 0);
-        $bi[] = new admin_setting_configcheckbox('backup_sche_sitefiles', get_string('sitefiles'), get_string('backupsitefileshelp'), 0);
+        $bi[] = new admin_setting_configcheckbox('backup_sche_coursefiles', get_string('coursefiles'), get_string('backupcoursefileshelp'), 1);
+        $bi[] = new admin_setting_configcheckbox('backup_sche_sitefiles', get_string('sitefiles'), get_string('backupsitefileshelp'), 1);
         $bi[] = new admin_setting_configcheckbox('backup_sche_gradebook_history', get_string('gradebookhistories', 'grades'), get_string('backupgradebookhistoryhelp'), 0);
         $bi[] = new admin_setting_configcheckbox('backup_sche_messages', get_string('messages', 'message'), get_string('backupmessageshelp','message'), 0);
         $bi[] = new admin_setting_configcheckbox('backup_sche_blogs', get_string('blogs', 'blog'), get_string('backupblogshelp','blog'), 0);
diff --git a/backup/restorelib.php b/backup/restorelib.php
index 6cf48e1..04a4f83 100644
--- a/backup/restorelib.php
+++ b/backup/restorelib.php
@@ -971,7 +971,7 @@ define('RESTORE_GROUPS_GROUPINGS', 3);
         // Calculate if we have perms to create users, by checking:
         // to 'moodle/restore:createuser' and 'moodle/restore:userinfo'
         // and also observe $CFG->disableusercreationonrestore
-        $cancreateuser = false;
+        $cancreateuser = true;
         if (has_capability('moodle/restore:createuser', $context) and
             has_capability('moodle/restore:userinfo', $context) and
             empty($CFG->disableusercreationonrestore)) { // Can create users
@@ -1213,6 +1213,7 @@ define('RESTORE_GROUPS_GROUPINGS', 3);
                 //Replace old course_id in course_header
                 $course_header->course_id = $newid;
                 $SESSION->restore->course_id = $newid;
+                get_context_instance(CONTEXT_COURSE, $newid);
                 return $newid;
             } else {
                 $status = false;
diff --git a/tag/lib.php b/tag/lib.php
index f6fe89a..3f2b1a5 100644
--- a/tag/lib.php
+++ b/tag/lib.php
@@ -620,7 +620,6 @@ function tag_find_records($tag, $type, $limitfrom='', $limitnum='') {
 function tag_add($tags, $type="default") {
     global $USER;
 
-    require_capability('moodle/tag:create', get_context_instance(CONTEXT_SYSTEM));
 
     if (!is_array($tags)) {
         $tags = array($tags);
@@ -664,7 +663,6 @@ function tag_add($tags, $type="default") {
  */
 function tag_assign($record_type, $record_id, $tagid, $ordering) {
 
-    require_capability('moodle/tag:create', get_context_instance(CONTEXT_SYSTEM));
 
     if ( $tag_instance_object = get_record('tag_instance', 'tagid', $tagid, 'itemtype', $record_type, 'itemid', $record_id, 'id') ) {
         $tag_instance_object->ordering = $ordering;
